{"ast":null,"code":"import { ADD_TO_CART, RESET_CART, REMOVE_FROM_CART, GET_ALL_CART_SUCCESS, GET_ALL_CART_FAIL } from \"./type\";\nimport axios from \"axios\";\nexport const addToCart = id => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`http://localhost:8000/api/service/${id}`);\n  dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      product: data._id,\n      name: data.name,\n      price: data.price,\n      time: data.time,\n      location: data.location\n    }\n  });\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_FROM_CART,\n    payload: id\n  });\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\n}; //Add to database\n\nexport const addToDb = data => async dispatch => {\n  try {\n    const res = await axios.post(\"http://localhost:8000/api/cart\", data);\n    console.log(\"Success\");\n    console.log(res);\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getCart = () => async dispatch => {\n  try {\n    const res = await axios.get(\"http://localhost:8000/api/cart\");\n    dispatch({\n      type: GET_ALL_CART_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ALL_CART_FAIL,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["/Users/parkwaylabs/Documents/Projects/ECrew/TravelClient/src/actions/cart.js"],"names":["ADD_TO_CART","RESET_CART","REMOVE_FROM_CART","GET_ALL_CART_SUCCESS","GET_ALL_CART_FAIL","axios","addToCart","id","dispatch","getState","data","get","type","payload","product","_id","name","price","time","location","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","addToDb","res","post","console","log","error","getCart"],"mappings":"AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,gBAHF,EAIEC,oBAJF,EAKEC,iBALF,QAMO,QANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAIC,EAAD,IAAQ,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,KAAK,CAACM,GAAN,CAAW,qCAAoCJ,EAAG,EAAlD,CAAvB;AAEAC,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEZ,WADC;AAEPa,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAEJ,IAAI,CAACK,GADP;AAEPC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAFJ;AAGPC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAHL;AAIPC,MAAAA,IAAI,EAAER,IAAI,CAACQ,IAJJ;AAKPC,MAAAA,QAAQ,EAAET,IAAI,CAACS;AALR;AAFF,GAAD,CAAR;AAWAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAA7B;AACD,CAfM;AAiBP,OAAO,MAAMC,cAAc,GAAInB,EAAD,IAAQ,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEV,gBADC;AAEPW,IAAAA,OAAO,EAAEN;AAFF,GAAD,CAAR;AAKAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAA7B;AACD,CAPM,C,CASP;;AAEA,OAAO,MAAME,OAAO,GAAIjB,IAAD,IAAU,MAAOF,QAAP,IAAoB;AACnD,MAAI;AACF,UAAMoB,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAW,gCAAX,EAA6CnB,IAA7C,CAAlB;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,CARM;AAUP,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAOzB,QAAP,IAAoB;AAC/C,MAAI;AACF,UAAMoB,GAAG,GAAG,MAAMvB,KAAK,CAACM,GAAN,CAAU,gCAAV,CAAlB;AACAH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,oBADC;AAEPU,MAAAA,OAAO,EAAEe,GAAG,CAAClB;AAFN,KAAD,CAAR;AAID,GAND,CAME,OAAOsB,KAAP,EAAc;AACdxB,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAER,iBADC;AAEPS,MAAAA,OAAO,EAAEmB;AAFF,KAAD,CAAR;AAID;AACF,CAbM","sourcesContent":["import {\n  ADD_TO_CART,\n  RESET_CART,\n  REMOVE_FROM_CART,\n  GET_ALL_CART_SUCCESS,\n  GET_ALL_CART_FAIL,\n} from \"./type\";\nimport axios from \"axios\";\n\nexport const addToCart = (id) => async (dispatch, getState) => {\n  const { data } = await axios.get(`http://localhost:8000/api/service/${id}`);\n\n  dispatch({\n    type: ADD_TO_CART,\n    payload: {\n      product: data._id,\n      name: data.name,\n      price: data.price,\n      time: data.time,\n      location: data.location,\n    },\n  });\n\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: REMOVE_FROM_CART,\n    payload: id,\n  });\n\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\n};\n\n//Add to database\n\nexport const addToDb = (data) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"http://localhost:8000/api/cart\", data);\n    console.log(\"Success\");\n    console.log(res);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCart = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"http://localhost:8000/api/cart\");\n    dispatch({\n      type: GET_ALL_CART_SUCCESS,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ALL_CART_FAIL,\n      payload: error,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}