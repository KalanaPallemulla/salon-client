{"ast":null,"code":"import { REGISTER_FAIL, REGISTER_SUCCESS, LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED, AUTH_ERROR, LOGOUT, DELETE_ACCOUNT } from \"../actions/type\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  authLoading: true,\n  user: null\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return { ...state,\n        isAuthenticated: true,\n        authLoading: false,\n        user: payload\n      };\n\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        authLoading: false\n      };\n\n    case DELETE_ACCOUNT:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        authLoading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/parkwaylabs/Documents/Projects/ECrew/TravelClient/src/redux/auth.js"],"names":["REGISTER_FAIL","REGISTER_SUCCESS","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED","AUTH_ERROR","LOGOUT","DELETE_ACCOUNT","initialState","token","localStorage","getItem","isAuthenticated","authLoading","user","state","action","type","payload","setItem","removeItem"],"mappings":"AAAA,SACEA,aADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,WALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,cARF,QASO,iBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,WAAW,EAAE,IAHM;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGP,YAAlB,EAAgCQ,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKb,WAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,WAAW,EAAE,KAHR;AAILC,QAAAA,IAAI,EAAEI;AAJD,OAAP;;AAMF,SAAKhB,aAAL;AACA,SAAKD,gBAAL;AACES,MAAAA,YAAY,CAACS,OAAb,CAAqB,OAArB,EAA8BD,OAAO,CAACT,KAAtC;AACA,aAAO,EACL,GAAGM,KADE;AAEL,WAAGG,OAFE;AAGLN,QAAAA,eAAe,EAAE,IAHZ;AAILC,QAAAA,WAAW,EAAE;AAJR,OAAP;;AAMF,SAAKN,cAAL;AACA,SAAKF,UAAL;AACA,SAAKF,UAAL;AACA,SAAKH,aAAL;AACA,SAAKM,MAAL;AACEI,MAAAA,YAAY,CAACU,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGL,KADE;AAELN,QAAAA,KAAK,EAAE,IAFF;AAGLG,QAAAA,eAAe,EAAE,KAHZ;AAILC,QAAAA,WAAW,EAAE;AAJR,OAAP;;AAMF;AACE,aAAOE,KAAP;AA9BJ;AAgCD","sourcesContent":["import {\n  REGISTER_FAIL,\n  REGISTER_SUCCESS,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGOUT,\n  DELETE_ACCOUNT,\n} from \"../actions/type\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  authLoading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        authLoading: false,\n        user: payload,\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        authLoading: false,\n      };\n    case DELETE_ACCOUNT:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        authLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}