{"ast":null,"code":"import { ADD_TO_CART, RESET_CART, REMOVE_FROM_CART } from \"../actions/type\"; // eslint-disable-next-line import/no-anonymous-default-export\n\nexport default function (state = {\n  cartItems: []\n}, action) {\n  const {\n    payload,\n    type\n  } = action;\n  const values = localStorage.getItem(\"cart\");\n  state.cartItems.push(value);\n\n  switch (type) {\n    case ADD_TO_CART:\n      const item = payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case REMOVE_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/parkwaylabs/Documents/Projects/ECrew/TravelClient/src/redux/cart.js"],"names":["ADD_TO_CART","RESET_CART","REMOVE_FROM_CART","state","cartItems","action","payload","type","values","localStorage","getItem","push","value","item","existItem","find","x","product","map","filter"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,gBAAlC,QAA0D,iBAA1D,C,CAEA;;AACA,eAAe,UAAUC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAlB,EAAqCC,MAArC,EAA6C;AAC1D,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAoBF,MAA1B;AACA,QAAMG,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf;AACAP,EAAAA,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAqBC,KAArB;;AAEA,UAAQL,IAAR;AACE,SAAKP,WAAL;AACE,YAAMa,IAAI,GAAGP,OAAb;AACA,YAAMQ,SAAS,GAAGX,KAAK,CAACC,SAAN,CAAgBW,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcJ,IAAI,CAACI,OAA/C,CAAlB;;AACA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGX,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBc,GAAhB,CAAqBF,CAAD,IAC7BA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCJ,IAAlC,GAAyCG,CADhC;AAFN,SAAP;AAMD,OAPD,MAOO;AACL,eAAO,EACL,GAAGb,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBS,IAArB;AAFN,SAAP;AAID;;AACH,SAAKX,gBAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBe,MAAhB,CAAwBH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcZ,MAAM,CAACC,OAAnD;AAFN,OAAP;;AAIF;AACE,aAAOH,KAAP;AAvBJ;AAyBD","sourcesContent":["import { ADD_TO_CART, RESET_CART, REMOVE_FROM_CART } from \"../actions/type\";\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default function (state = { cartItems: [] }, action) {\n  const { payload, type } = action;\n  const values = localStorage.getItem(\"cart\");\n  state.cartItems.push(value);\n\n  switch (type) {\n    case ADD_TO_CART:\n      const item = payload;\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n    case REMOVE_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}